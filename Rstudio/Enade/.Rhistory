1-.734
1-..94^5
1-.94^5
3/50
1-3/50
.94^5
1-.94^5
90/60
.75*.4+.5*.6
.75*.4
.3/.6
(26+24+23+22+28+25+27+26+28+24)/10
sqrt(5.36/10)
EXP(-3)
EXP(-3)
exp(-3)
0.4^3
0.4*.8
0.03*0.4
0.03*0.4+.05*.5+.02*.1
.012/.039
2/13
.31*13
0.3076923*13
2*3*5*7
210/2
210/3
210/5
210/7
105+70+42+30
1/18
1/9
1/6
20*19*18/6
5*4*3*2
25*24*23*22*21/120
5/2
1140/53130*2.5
7*6*5
7*6*5/6
35*0.07^3*.93^4
10*9*8/6
120*0.07^3*.93^4
120*0.07^3*.93^7
1/1000
5^3*exp(-5)/6
2/3
2000*0.0002
1/1000
exp(-.4)
1.4(exp(-.4))
1.4*(exp(-.4))
1-1.4*(exp(-.4))
105/60
60/105
1-.57
15*7
4/7
1-4/7
1-.43
6/14
1-0.428
7*15
60/(7*15)
60/(7*20)
60/(6*20)
60/(7*15)
1-60/(7*15)
pexp(1,1)
pexp(15,1)
pexp(15,1/15)
.8*92
qnorm(.25)
15000/48
334*84
(28056/13000)
(28056/13000)^(1/84)-1
(28056/13000)^(1/84)-(1)
0.009199836*100
48*672.55
(32282.4/15000)^(1/48)-1
100^2
(199*10000)/16.791
sqrt((199*10000)/16.791)
sqrt((199*10000)/46.979)
x=1:3
y=0:2
lm(y~x)
model=lm(y~x)
model$residuals
y=c(3,7,15)
model=lm(y~x)
model$residuals
sum(model$residuals)
0.67^2
0.67*2
(6+8+12+7+9+6+11+6+10+9)
(6+8+12+7+9+6+11+6+10+9)/10
180/50
6-8.4
.36*3
12-8.4
3.6^2
1.4^2
2.4^2
11-8.4
(11-8.4)^2
5.76*2
(10-8.4)^2
(1.08+.16+12.96+1.96+11.52+6.76+2.56)/9
sqrt(4.11)
2.69*2.03
(2.69*2.03)/sqrt(10)
c=c(9,8,12,7,9,6,11,6,10,9)
mean(c)
(9+8+12+7+9+6+11+6+10+9)/10
var(c)
mean(c^2)-mean(c)^2
3.61*10
36.1/9
mean(c^2)
sqrt(4.01)
(2.69*2)/sqrt(10)
sqrt(4.01)
sqrt(4.01)*2.69/sqrt(10)
8.7+sqrt(4.01)*2.69/sqrt(10)
mean(c)
var(c)
var(c)
dv(c)
8.7+dp(c)*2.69/sqrt(10)
sqrt(var(c))
var(c)
sqrt(4.01)
8.7+sqrt(var(c))*2.69/sqrt(10)
8.7+sqrt(var(c))*2.685/sqrt(10)
8.7+(sqrt(var(c))*2.685)/sqrt(10)
(9+8+12+7+9+6+11+6+10+9)/10
sum((c-mean(c))^2)
(sum((c-mean(c))^2)/9)
(2.69*sqrt(4.01))/sqrt(10)
mean(c)+(2.69*sqrt(4.01))/sqrt(10)
c=c(6,8,12,7,9,6,11,6,10,9)
mean(c)
var(c)
8.4+(sqrt(var(c))*2.685)/sqrt(10)
sqrt(var(c)
3.61*10
8.4+(sqrt(3.61)*1.96)/sqrt(10)
8.4+(sqrt(var(c))*qt(0.95,9))/sqrt(10)
8.4+(sqrt(var(c))*qt(0.975,9))/sqrt(10)
qt(0.975,9)
8.4+(sqrt(var(c))*qt(0.975,9))/sqrt(10)
8.7+(sqrt(var(c))*qt(0.975,9))/sqrt(10)
10.25-8.7
8.7+(sqrt(var(c))*qt(2.69)/sqrt(10)
8.7+(sqrt(var(c))*qt(2.69)/sqrt(10))
8.7+(sqrt(var(c))*qt(2.69)/sqrt(10))
8.7+(sqrt(var(c))*2.69/sqrt(10))
sqrt(var(c))*2.69
sqrt(var(c))
sqrt(var(c))
var(c)
c=c(9,8,12,7,9,6,11,6,10,9)
8.7+(sqrt(var(c))*2.69/sqrt(10))
sqrt(var(c))*2.69
sqrt(var(c))
(2.19*.6)/.2
6.57^2
1-0.95
.05/2
1-0.9858
.0142/2
1-(.0142/2)
1-(.0142/2)-.5
(2.45*.6)/.2
7.35^2
c=c(9,8,12,7,9,6,11,6,10,9)
mean(c)
var(c)
sqrt(4.01)
sqrt(4.01)*2.26/sqrt(10)
8.7+sqrt(4.01)*2.26/sqrt(10)
8.7+2*2.26/sqrt(10)
.88*20
109.4-17.6
.17/.67
1.96*.25
4.75*8
4.75*8/10
sqrt(400)
38/20
6*1.96/sqrt(144)
6*1.96/sqrt(144)
12^2
225-144
1.96*9/sqrt(10)
12+5.58
810/9
sqrt(90)
sqrt(90)*2.26/sqrt(10)
12+6.78
12-6.78
4*2.05/10
.29/.24+.39/.43+4.53/5.4
(.29/.24+.39/.43+4.53/5.4)/3
(.55/.24+.46/.43+5.44/5.4)/3
sqrt(103.84*103.93)
365*.65+948*.7.51+78*1.22
365*.65+948*.7.51+78*1.22
365*.65+948*7.51+78*1.22
(.97*365+9.77*948+2.10*78)/(365*.65+948*7.51+78*1.22)
(.97*365+9.77*948+2.10*78)/(365*.65+948*7.51+78*1.22)*100
(.97*345+9.77*948+2.10*78)/(345*.65+948*7.51+78*1.22)*100
92.08/99.04
99.04/92.08*100
4050000/48000
5750000/48000
10000/116.3
10000/116.3*100
360*70/300*50
(360*70)/300*50
(360*70)/(300*50)
140*100/105
100/133.3
9/8
9/8*100
88*100/80
1825/161.2
View(aux2)
(5*70+32*35+15*10)/(4*62+37*45+7*35)
5*70/4*62
5*70/(4*62)
(5*70)/(4*62)
(5*70)/(4*62)+(32*35)/(37*45)
(5*70)/(4*62)+(32*35)/(37*45)+(10*15)/(7*35)
((5*70)/(4*62)+(32*35)/(37*45)+(10*15)/(7*35))/3
((5*70)/(4*62)+(32*35)/(37*45)+(10*15)/(7*35))/3
5*70+35*32+10*15
1620/3
4*62+37*45+7*35
2158/3
540/719.33
70/5+35/32+15/10
2/1.5
2/1.5-1
1/1.6
97*97/100
108/113
1-108/113
1-108/113*100
(1-108/113)*100
97*95/100
105/94.09
(1-105/94.09)*100
(1-105/94.09)
(1-(105/94.09))*100
105/94.09
105/94.09-1
(105/94.09-1)*100
1/125
1/125*100
1/1.25
180/80-1
180/80
180/80-1
350*3.3+950*2.2+4.4*550
350*1.5+950*1.3+550*2.8
5665/3300
200*1.5+1.3*800+2.8*500
3.3*200+2.2*800+500*4.4
4620/2740
1.25*118
147.5*1.08
159.3*1.3
207.09/118
.56*133
75*180
.56*1.33
.75*1.80
1.44/.75
1.44/.80
435/850
435/850*100
435/580*100
1/1.45
1-(1/1.45)
1-(1/1.45)*100
(1-(1/1.45))*100
15*3+20*4+40*6
26*3+68*4+52*6
662/365
1390/1250*520/500
4*15+3*35+8*10
28*4+56*35+30*10
2372/245
28*4+56*3+30*10
580/245
28*4+56*3+30*8
520/245
520/245*100
1/2.3
70*5+35*32+15*10
(70*5+35*32+15*10)/(4*62+45*37+7*35)
(5+32+10)/(4+37+7)
(62+45+35)/(70+35+15)
(5+32+10)/(4+37+7)*(62+45+35)/(70+35+15)
(5+32+10)/(4+37+7)*
(62+45+35)/(70+35+15)
(62+45+35)/(70+35+15)
pnorm(.31)-pnorm(.73)
pnorm(.31)-pnorm(-.73)
pnorm(-.73)
pnorm(.31)
pnorm(.31)-.5
pnorm(.73)-.5
mean(c(9,27,15))
1.5/2+6/4+1/.5+1
1.5/2
6/4
(1.5/2+6/4+1/.5+1)/4
34/316
3*39
117-98
ppois(3,1.5)
1-ppois(3,1.5)
1-4*exp(-2)
ppois(2,3)
1-ppois(2,3)
1-5*exp(-2)
1-ppois(2,3)
1-5*exp(-2)
sqrt(8)
sqrt(2.2)/21
5/700
6^4
6^4*263
setwd("~/")
setwd("~/")
read.csv("DADOS.csv")
read.csv("DADOS.csv",sep=";")
dados=read.csv("DADOS.csv",sep=";")
dados
library(dplyr)
dados %>% duplicated()
help("duplicated")
dados %>% duplicated() %>% which()
i=dados %>% duplicated() %>% which()
dados[i]
dados[i,]
dados
i=dados %>% any.duplicated() %>% which()
i=dados %>% anyDuplicated() %>% which()
dados %>% anyDuplicated()
i=dados %>% Duplicated() %>% which()
i=dados %>% duplicated() %>% which()
i=dados %>% duplicated(MARGIN=0) %>% which()
i
i=dados %>% duplicated(MARGIN=1) %>% which()
dados[i,]
i
i=dados %>% duplicated(MARGIN=2) %>% which()
dados[i,]
dados %>%
group_by(MODELO,VALOR) %>% count()
dados %>%
group_by(MODELO,CLASSE) %>% count()
dados %>%
group_by(MODELO,CLASSE) %>% count() %>% filter(n>1)
dados=read.csv("DADOS.csv",sep=";")
library(dplyr)
i=dados %>% duplicated(MARGIN=2) %>% which()
dados[i,]
help("duplicated")
dados %>%
group_by(MODELO,CLASSE) %>% count() %>% filter(n>1)
dados %>%
group_by(MODELO,CLASSE) %>% count() %>% filter(n>1)
dados
dados %>%filter(
group_by(MODELO,CLASSE) %>% count() %>% filter(n>1))
dados %>%which(
group_by(MODELO,CLASSE) %>% count() %>% filter(n>1))
dados %>%
group_by(MODELO,CLASSE) %>% count() %>% filter(n>1)
dados %>%
group_by(MODELO,CLASSE) %>% distinct(MODELO)
dados %>%
group_by(MODELO,CLASSE) %>% distinct(MODELO)
dados %>% select(MODELO, CLASSE, VALOR) %>%
group_by(MODELO,CLASSE)
dados %>% select(MODELO, CLASSE, VALOR) %>%
distinct(MODELO,CLASSE)
dados %>% select(MODELO, CLASSE, VALOR) %>%
distinct(MODELO,CLASSE) %>% count()
dados %>% select(MODELO, CLASSE, VALOR) %>%
distinct(MODELO,CLASSE)
dados %>% select(MODELO, CLASSE, VALOR)
dados %>% group_by(MODELO,CLASSE)
dados %>% group_by(MODELO,CLASSE) %>% count()
dados %>% group_by(MODELO,CLASSE) %>% count() %>% filter(n>1)
dados %>% group_by(MODELO,CLASSE) %>% count() %>% filter(n>1) %>% select(MODELO,CLASSE)
a=dados %>% group_by(MODELO,CLASSE) %>% count() %>% filter(n>1) %>% select(MODELO,CLASSE)
dados
merge(a,dados)
b=merge(a,dados)
dim(dados)
dim(b)
######### CARREGANDO OS DADOS ###############
setwd("C:/Users/Flávio/Desktop/Análise de Dados - Github/Rstudio/Enade")
######### CARREGANDO OS DADOS ###############
setwd("C:/Users/Flávio/Desktop/Analise_Dados - Github/Rstudio/Enade")
######### CARREGANDO OS DADOS ###############
setwd("C:/Users/Flávio/Desktop/Analise_Dados - Github/Rstudio/Enade")
######### CARREGANDO OS DADOS ###############
setwd("C:/Users/Flávio/Desktop/Analise_Dados/Rstudio/Enade")
BRUTO <- read.csv("enade.csv", head=T, sep=";",dec=",")
enade <- read.csv("enade.csv", head=T, sep=";",dec=",")
##Visualizando as 5 primeiras linhas do banco de dados
head(enade)
enade <- read.csv("enade.csv", head=T, sep=",",dec=",")
##Visualizando as 5 primeiras linhas do banco de dados
head(enade)
enade <- read.csv("enade.csv", head=T, sep=",",dec=".")
##Visualizando as 5 primeiras linhas do banco de dados
head(enade)
##Visualizando as 5 primeiras linhas do banco de dados
head(enade)
# Filtrando os candidatos presentes com resultado válido
enade = enade %>% filter(TP_PRES == 555)
######### CARREGANDO OS PACOTES UTILIZADOS ###############
library(tidyverse)
library(dplyr)
# Filtrando os candidatos presentes com resultado válido
enade = enade %>% filter(TP_PRES == 555)
# Retirando as linhas que o resultado da Nota bruta da prova era inexistente
enade = enade %>% filter (!is.na(NT_GER))
# Selecionando os candidatos que fizeram o ensino médio apenas no Brasil
enade = enade %>% filter (QE_I17 %in% c("A","B","D","E"))
######### ANÁLISE EXPLORATÓRIA DE DADOS ###############
#Banco de dados com duas colunas: código da UF e  UF
UF <- read.table("UF.txt", head=T, sep=";")
#Criando uma coluna para UF
enade=merge(enade,UF)
# Quantos candidatos por estados fizeram o Enade 2019?
enade %>% group_by(UF) %>% summarise("alunos"=n()) %>% arrange(desc(alunos))
#Gráfico de barra quantidade de candidatos por Estado
enade %>% ggplot( aes(x=UF)) +
geom_bar(stat="count", fill="#f68060", alpha=.6, width=.4)+
coord_flip() + xlab("") + ylab("Quandidade de candidatos")+
labs(title= 'Quandidade de candidatos por Estado' )
# O candidato mais novo
min(enade$NU_IDADE)
#O candidato mais velho
max(enade$NU_IDADE)
#Idade média dos cantidatos
round(mean(enade$NU_IDADE),2)
#Idade mais frequente
enade %>% group_by(NU_IDADE) %>% summarise("Freq"=n()) %>% arrange(desc(Freq))
#23 anos é idade mais frequente dos alunos que fizeram a prova do Enade
#Histograma da distribuição de idade
enade %>% ggplot(aes(x=NU_IDADE)) +  geom_histogram(aes(y=..count..), binwidth = 5,color = "black",fill="lightblue",alpha=.4) +
labs(title = "Distribuição das idades",
x = "Idades dos Alunos",
y = "Densidade")
#23 anos é idade mais frequente dos alunos que fizeram a prova do Enade
#Histograma da distribuição de idade
enade %>% ggplot(aes(x=NU_IDADE)) +  geom_histogram(aes(y=..count..), binwidth = 5,color = "black",fill="lightblue",alpha=.4) +
labs(title = "Distribuição das idades",
x = "Idades dos Alunos",
y = "Total de alunos")
#23 anos é idade mais frequente dos alunos que fizeram a prova do Enade
#Histograma da distribuição de idade
enade %>% ggplot(aes(x=NU_IDADE)) +  geom_histogram(aes(y=..count..),color = "black",fill="lightblue",alpha=.4) +
labs(title = "Distribuição das idades",
x = "Idades dos Alunos",
y = "Total de alunos")
#Menor nota
min(enade$NT_GER)
#Maior nota
max(enade$NT_GER)
#Nota Média
round(mean(enade$NT_GER),2)
#Mediana das notas
median(enade$NT_GER)
# Distribuição das notas dos candidatos
enade %>% ggplot(aes(x=NT_GER)) + geom_density(size=1.5,fill="pink",alpha=.4) +
geom_histogram(aes(y=..density..), binwidth = 5,color = "black",fill="lightblue",alpha=.4) +
labs(title = "Distribuição das notas dos candidatos",
x = "Notas Candidatos",
y = "Densidade")
#Proporção da modalidade de ensino dos candidatos
enade$MODALIDADE = factor(enade$CO_MODALIDADE,labels = c("EaD","Presensial"))
prop=enade %>% group_by(MODALIDADE) %>% summarise(freq=n()) %>% mutate(prop = freq/sum(freq)*100,lab.ypos=cumsum(prop)-0.5*prop)
#Gráfico de setores da modalidade de ensino dos candidatos
prop %>% ggplot(aes(x="",y=prop,fill=MODALIDADE)) + geom_bar(width = 1,stat = 'identity') + coord_polar("y",start=0)+
geom_text(aes(y=lab.ypos-2.3,label=paste(round(prop,0),"%")),color = "black",size=4) + theme_void() + labs(title = "Gráfico de setores da modalidade de ensino dos candidatos")
# Comparação do desempenho dos alunos da modalidade:EaD e Presencial
enade %>% ggplot(aes(x =MODALIDADE,y=NT_GER,fill=MODALIDADE)) + geom_boxplot() + guides(fill=F) +
theme_bw() + xlab("Modalidade") + ylab("Notas dos candidatos") +labs(title = "Notas dos candidatos por tipo de modalidade de ensino")
# Contagem dos candidatos por tipo de escola que cursou o ensino médio
enade %>% group_by(QE_I17) %>% count()
enade$QE_I17=factor(enade$QE_I17,labels = c("Pública","Particular","Pública e Particular","Pública e Particular"))
enade %>% ggplot(aes(x =QE_I17)) + geom_bar(stat="count",fill=c("#10c6d3","#0ea5af","#0b8b93")) +
geom_text(stat='count',aes(label=..count..),vjust=1.6, color="black",size=4.5)+
labs(x="Tipo de escola que cursou no ensino médio",y="Total de alunos por ensino",title = 'Contagem de candidatos por tipo de escola que cursou o ensino médio')
# Comparação do desempenho por tipo de escola que cursou o ensino médio em escola : Pública, particular ou pública e particular
enade %>% ggplot(aes(x =QE_I17,y=NT_GER,fill=QE_I17)) + geom_boxplot() + guides(fill=F) +
theme_bw()  + labs(x="Tipo de escola que cursou no ensino médio",y="Total de alunos por ensino",title = "Notas dos candidatos por tipo de escola que cursou no ensino médio")
enade %>% filter(NU_IDADE==86) %>% select(UF,MODALIDADE)
enade %>% filter(NU_IDADE==86) %>% select(UF,MODALIDADE)
enade %>% filter(NU_IDADE==86) %>% select(MODALIDADE,QE_I17)
